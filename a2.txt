xPoints = new int[]{368, 368, 368, 368, 369, 369, 369, 370, 370, 370, 371, 371, 371, 371, 372, 372, 373, 373, 373, 373, 373, 373, 372, 372, 372, 372, 372, 373, 373, 373, 373, 373, 373, 372, 370, 369, 367, 367, 367, 367, 367, 367, 367, 367, 367, 367, 367, 368, 368, 369, 370, 371, 372, 372, 373, 373, 373, 374, 374, 374, 374, 374, 374, 374, 374, 374, 373, 373, 373, 374, 374, 374, 374, 374, 373, 373, 372, 372, 372, 372, 371, 371, 370, 369, 368, 368, 368, 368, 368, 368, 368};
yPoints = new int[]{329, 329, 329, 329, 329, 329, 329, 328, 328, 328, 328, 327, 326, 324, 322, 320, 318, 316, 314, 313, 311, 310, 309, 308, 307, 305, 302, 300, 300, 300, 299, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 298, 297, 297, 297, 297, 297, 297, 298, 298, 297, 297, 297, 297, 297, 297, 297, 297, 297, 298, 298, 299, 299, 302, 306, 309, 311, 312, 313, 315, 316, 317, 319, 321, 323, 325, 327, 329, 329, 329, 329, 329, 329, 330, 330, 330, 329, 329, 329, 329};
              for (int i = 0; i < xPoints.length - 3; i += 3) {
    bezier_Curve(g2d,
            new int[] { (int) Math.round(xPoints[i]) + x, (int) Math.round(xPoints[i + 1]) + x,
                    (int) Math.round(xPoints[i + 2]) + x, (int) Math.round(xPoints[i + 3]) + x },
            new int[] { (int) Math.round(yPoints[i]) + y, (int) Math.round(yPoints[i + 1]) + y,
                    (int) Math.round(yPoints[i + 2]) + y, (int) Math.round(yPoints[i + 3]) + y });
}

