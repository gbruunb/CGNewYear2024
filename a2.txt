xPoints = new int[]{240, 241, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 243, 244, 245, 246, 246, 247, 247, 247, 247, 246, 246, 246, 246, 247, 248, 249, 249, 249, 247, 246, 246, 246, 246, 246, 246, 246, 246, 246, 244, 243, 242, 242, 242, 241, 241, 241, 241, 241, 242, 242, 242, 242, 240, 239, 238, 238, 237, 236, 236, 235, 234, 234, 233, 232, 232, 231, 231, 228, 226, 225, 225, 224, 223, 223, 221, 220, 219, 218, 217, 216, 215, 240};
yPoints = new int[]{75, 75, 75, 75, 75, 76, 77, 78, 77, 78, 79, 80, 80, 80, 79, 79, 79, 80, 80, 81, 82, 82, 82, 82, 82, 82, 84, 85, 86, 86, 87, 88, 88, 89, 89, 90, 92, 93, 94, 94, 94, 94, 93, 92, 92, 92, 92, 93, 93, 94, 94, 94, 95, 95, 95, 95, 94, 94, 94, 95, 95, 95, 94, 93, 93, 92, 92, 92, 93, 93, 93, 96, 95, 94, 91, 91, 91, 93, 93, 93, 92, 92, 92, 92, 93, 75};
              for (int i = 0; i < xPoints.length - 3; i += 3) {
    bezier_Curve(g2d,
            new int[] { (int) Math.round(xPoints[i]) + x, (int) Math.round(xPoints[i + 1]) + x,
                    (int) Math.round(xPoints[i + 2]) + x, (int) Math.round(xPoints[i + 3]) + x },
            new int[] { (int) Math.round(yPoints[i]) + y, (int) Math.round(yPoints[i + 1]) + y,
                    (int) Math.round(yPoints[i + 2]) + y, (int) Math.round(yPoints[i + 3]) + y });
}

